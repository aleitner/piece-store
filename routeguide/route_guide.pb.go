// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route_guide.proto

package routeguide

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ShardStore struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Ttl                  int64    `protobuf:"varint,3,opt,name=ttl" json:"ttl,omitempty"`
	StoreOffset          int64    `protobuf:"varint,4,opt,name=storeOffset" json:"storeOffset,omitempty"`
	Content              string   `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardStore) Reset()         { *m = ShardStore{} }
func (m *ShardStore) String() string { return proto.CompactTextString(m) }
func (*ShardStore) ProtoMessage()    {}
func (*ShardStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_guide_9ec35bc21df7b531, []int{0}
}
func (m *ShardStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardStore.Unmarshal(m, b)
}
func (m *ShardStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardStore.Marshal(b, m, deterministic)
}
func (dst *ShardStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardStore.Merge(dst, src)
}
func (m *ShardStore) XXX_Size() int {
	return xxx_messageInfo_ShardStore.Size(m)
}
func (m *ShardStore) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardStore.DiscardUnknown(m)
}

var xxx_messageInfo_ShardStore proto.InternalMessageInfo

func (m *ShardStore) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ShardStore) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ShardStore) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *ShardStore) GetStoreOffset() int64 {
	if m != nil {
		return m.StoreOffset
	}
	return 0
}

func (m *ShardStore) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ShardRetrieval struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	StoreOffset          int64    `protobuf:"varint,4,opt,name=storeOffset" json:"storeOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardRetrieval) Reset()         { *m = ShardRetrieval{} }
func (m *ShardRetrieval) String() string { return proto.CompactTextString(m) }
func (*ShardRetrieval) ProtoMessage()    {}
func (*ShardRetrieval) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_guide_9ec35bc21df7b531, []int{1}
}
func (m *ShardRetrieval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardRetrieval.Unmarshal(m, b)
}
func (m *ShardRetrieval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardRetrieval.Marshal(b, m, deterministic)
}
func (dst *ShardRetrieval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardRetrieval.Merge(dst, src)
}
func (m *ShardRetrieval) XXX_Size() int {
	return xxx_messageInfo_ShardRetrieval.Size(m)
}
func (m *ShardRetrieval) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardRetrieval.DiscardUnknown(m)
}

var xxx_messageInfo_ShardRetrieval proto.InternalMessageInfo

func (m *ShardRetrieval) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *ShardRetrieval) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ShardRetrieval) GetStoreOffset() int64 {
	if m != nil {
		return m.StoreOffset
	}
	return 0
}

type ShardRetrievalStream struct {
	Content              string   `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardRetrievalStream) Reset()         { *m = ShardRetrievalStream{} }
func (m *ShardRetrievalStream) String() string { return proto.CompactTextString(m) }
func (*ShardRetrievalStream) ProtoMessage()    {}
func (*ShardRetrievalStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_guide_9ec35bc21df7b531, []int{2}
}
func (m *ShardRetrievalStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardRetrievalStream.Unmarshal(m, b)
}
func (m *ShardRetrievalStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardRetrievalStream.Marshal(b, m, deterministic)
}
func (dst *ShardRetrievalStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardRetrievalStream.Merge(dst, src)
}
func (m *ShardRetrievalStream) XXX_Size() int {
	return xxx_messageInfo_ShardRetrievalStream.Size(m)
}
func (m *ShardRetrievalStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardRetrievalStream.DiscardUnknown(m)
}

var xxx_messageInfo_ShardRetrievalStream proto.InternalMessageInfo

func (m *ShardRetrievalStream) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ShardDelete struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardDelete) Reset()         { *m = ShardDelete{} }
func (m *ShardDelete) String() string { return proto.CompactTextString(m) }
func (*ShardDelete) ProtoMessage()    {}
func (*ShardDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_guide_9ec35bc21df7b531, []int{3}
}
func (m *ShardDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardDelete.Unmarshal(m, b)
}
func (m *ShardDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardDelete.Marshal(b, m, deterministic)
}
func (dst *ShardDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardDelete.Merge(dst, src)
}
func (m *ShardDelete) XXX_Size() int {
	return xxx_messageInfo_ShardDelete.Size(m)
}
func (m *ShardDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardDelete.DiscardUnknown(m)
}

var xxx_messageInfo_ShardDelete proto.InternalMessageInfo

func (m *ShardDelete) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Summary struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Summary) Reset()         { *m = Summary{} }
func (m *Summary) String() string { return proto.CompactTextString(m) }
func (*Summary) ProtoMessage()    {}
func (*Summary) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_guide_9ec35bc21df7b531, []int{4}
}
func (m *Summary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Summary.Unmarshal(m, b)
}
func (m *Summary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Summary.Marshal(b, m, deterministic)
}
func (dst *Summary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Summary.Merge(dst, src)
}
func (m *Summary) XXX_Size() int {
	return xxx_messageInfo_Summary.Size(m)
}
func (m *Summary) XXX_DiscardUnknown() {
	xxx_messageInfo_Summary.DiscardUnknown(m)
}

var xxx_messageInfo_Summary proto.InternalMessageInfo

func (m *Summary) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ShardStore)(nil), "routeguide.ShardStore")
	proto.RegisterType((*ShardRetrieval)(nil), "routeguide.ShardRetrieval")
	proto.RegisterType((*ShardRetrievalStream)(nil), "routeguide.ShardRetrievalStream")
	proto.RegisterType((*ShardDelete)(nil), "routeguide.ShardDelete")
	proto.RegisterType((*Summary)(nil), "routeguide.Summary")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RouteGuide service

type RouteGuideClient interface {
	Retrieve(ctx context.Context, in *ShardRetrieval, opts ...grpc.CallOption) (RouteGuide_RetrieveClient, error)
	Store(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_StoreClient, error)
	Delete(ctx context.Context, in *ShardDelete, opts ...grpc.CallOption) (*Summary, error)
}

type routeGuideClient struct {
	cc *grpc.ClientConn
}

func NewRouteGuideClient(cc *grpc.ClientConn) RouteGuideClient {
	return &routeGuideClient{cc}
}

func (c *routeGuideClient) Retrieve(ctx context.Context, in *ShardRetrieval, opts ...grpc.CallOption) (RouteGuide_RetrieveClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RouteGuide_serviceDesc.Streams[0], c.cc, "/routeguide.RouteGuide/Retrieve", opts...)
	if err != nil {
		return nil, err
	}
	x := &routeGuideRetrieveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RouteGuide_RetrieveClient interface {
	Recv() (*ShardRetrievalStream, error)
	grpc.ClientStream
}

type routeGuideRetrieveClient struct {
	grpc.ClientStream
}

func (x *routeGuideRetrieveClient) Recv() (*ShardRetrievalStream, error) {
	m := new(ShardRetrievalStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routeGuideClient) Store(ctx context.Context, opts ...grpc.CallOption) (RouteGuide_StoreClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RouteGuide_serviceDesc.Streams[1], c.cc, "/routeguide.RouteGuide/Store", opts...)
	if err != nil {
		return nil, err
	}
	x := &routeGuideStoreClient{stream}
	return x, nil
}

type RouteGuide_StoreClient interface {
	Send(*ShardStore) error
	CloseAndRecv() (*Summary, error)
	grpc.ClientStream
}

type routeGuideStoreClient struct {
	grpc.ClientStream
}

func (x *routeGuideStoreClient) Send(m *ShardStore) error {
	return x.ClientStream.SendMsg(m)
}

func (x *routeGuideStoreClient) CloseAndRecv() (*Summary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Summary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routeGuideClient) Delete(ctx context.Context, in *ShardDelete, opts ...grpc.CallOption) (*Summary, error) {
	out := new(Summary)
	err := grpc.Invoke(ctx, "/routeguide.RouteGuide/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RouteGuide service

type RouteGuideServer interface {
	Retrieve(*ShardRetrieval, RouteGuide_RetrieveServer) error
	Store(RouteGuide_StoreServer) error
	Delete(context.Context, *ShardDelete) (*Summary, error)
}

func RegisterRouteGuideServer(s *grpc.Server, srv RouteGuideServer) {
	s.RegisterService(&_RouteGuide_serviceDesc, srv)
}

func _RouteGuide_Retrieve_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShardRetrieval)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RouteGuideServer).Retrieve(m, &routeGuideRetrieveServer{stream})
}

type RouteGuide_RetrieveServer interface {
	Send(*ShardRetrievalStream) error
	grpc.ServerStream
}

type routeGuideRetrieveServer struct {
	grpc.ServerStream
}

func (x *routeGuideRetrieveServer) Send(m *ShardRetrievalStream) error {
	return x.ServerStream.SendMsg(m)
}

func _RouteGuide_Store_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RouteGuideServer).Store(&routeGuideStoreServer{stream})
}

type RouteGuide_StoreServer interface {
	SendAndClose(*Summary) error
	Recv() (*ShardStore, error)
	grpc.ServerStream
}

type routeGuideStoreServer struct {
	grpc.ServerStream
}

func (x *routeGuideStoreServer) SendAndClose(m *Summary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *routeGuideStoreServer) Recv() (*ShardStore, error) {
	m := new(ShardStore)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RouteGuide_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteGuideServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routeguide.RouteGuide/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteGuideServer).Delete(ctx, req.(*ShardDelete))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.RouteGuide",
	HandlerType: (*RouteGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _RouteGuide_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Retrieve",
			Handler:       _RouteGuide_Retrieve_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Store",
			Handler:       _RouteGuide_Store_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "route_guide.proto",
}

func init() { proto.RegisterFile("route_guide.proto", fileDescriptor_route_guide_9ec35bc21df7b531) }

var fileDescriptor_route_guide_9ec35bc21df7b531 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xbb, 0xa6, 0x7f, 0x74, 0x0a, 0xa2, 0xab, 0xe8, 0x92, 0x53, 0x5c, 0x2f, 0x39, 0x85,
	0xa2, 0x17, 0x1f, 0x40, 0xf0, 0x22, 0x08, 0xc9, 0xcd, 0x8b, 0xac, 0x76, 0xda, 0x04, 0x92, 0x46,
	0x76, 0x27, 0x82, 0x1e, 0x7d, 0x40, 0x9f, 0x49, 0x76, 0x92, 0x62, 0x43, 0x2d, 0x7a, 0x9b, 0xf9,
	0x26, 0xdf, 0x97, 0x5f, 0x66, 0x02, 0xc7, 0xb6, 0x6e, 0x08, 0x9f, 0x96, 0x4d, 0x31, 0xc7, 0xe4,
	0xd5, 0xd6, 0x54, 0x4b, 0x60, 0x89, 0x15, 0xfd, 0x29, 0x00, 0xb2, 0xdc, 0xd8, 0x79, 0x46, 0xb5,
	0x45, 0x29, 0x61, 0x98, 0x1b, 0x97, 0x2b, 0x11, 0x89, 0xf8, 0x20, 0xe5, 0xda, 0x6b, 0xae, 0xf8,
	0x40, 0xb5, 0x17, 0x89, 0x38, 0x48, 0xb9, 0x96, 0x47, 0x10, 0x10, 0x95, 0x2a, 0x60, 0xc9, 0x97,
	0x32, 0x82, 0xa9, 0xf3, 0x11, 0x0f, 0x8b, 0x85, 0x43, 0x52, 0x43, 0x9e, 0x6c, 0x4a, 0x52, 0xc1,
	0xe4, 0xa5, 0x5e, 0x11, 0xae, 0x48, 0x8d, 0x38, 0x7e, 0xdd, 0xea, 0x47, 0x38, 0x64, 0x86, 0x14,
	0xc9, 0x16, 0xf8, 0x66, 0xca, 0x7f, 0x73, 0xfc, 0xf9, 0x56, 0x3d, 0x83, 0xd3, 0x7e, 0x76, 0x46,
	0x16, 0x4d, 0xb5, 0x49, 0x23, 0xfa, 0x34, 0x17, 0x30, 0x65, 0xc7, 0x2d, 0x96, 0x48, 0xbf, 0xae,
	0x44, 0x5f, 0xc2, 0x24, 0x6b, 0xaa, 0xca, 0xd8, 0x77, 0x9f, 0x53, 0xa1, 0x73, 0x66, 0x89, 0xeb,
	0x9c, 0xae, 0xbd, 0xfa, 0x12, 0x00, 0xa9, 0xdf, 0xf4, 0x9d, 0xdf, 0xb4, 0xbc, 0x87, 0xfd, 0x8e,
	0x01, 0x65, 0x98, 0xfc, 0x9c, 0x20, 0xe9, 0xe3, 0x85, 0xd1, 0xee, 0x59, 0x8b, 0xae, 0x07, 0x33,
	0x21, 0x6f, 0x60, 0xd4, 0x5e, 0xec, 0x6c, 0xeb, 0x71, 0xd6, 0xc3, 0x93, 0x9e, 0xde, 0xc2, 0xea,
	0x41, 0xec, 0x9d, 0xe3, 0xee, 0xcb, 0xce, 0xb7, 0xac, 0xed, 0x60, 0x87, 0xf7, 0x79, 0xcc, 0xbf,
	0xcf, 0xf5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x38, 0x33, 0x3f, 0x53, 0x02, 0x00, 0x00,
}
